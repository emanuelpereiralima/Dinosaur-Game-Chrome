class Cactus
{
	field int currentPosition;
	field int height;
	field int width;
	field int GroundHeight;

	constructor Cactus new(int Height, int Width, int groundHeight)
	{
		let height = Height;
		let width = Width;
		let GroundHeight = groundHeight;
		let currentPosition = 511;

		do draw();

		return this;
	}

	method void dispose()
	{
		do Memory.deAlloc(this);
		return;
	}

	method int getCurrentPosition()
	{
		return currentPosition;
	}

	method int getWidth()
	{
		return width;
	}

	method int getHeight()
	{
		return height;
	}

	method void draw()
	{
		var int rightBorder;
		let rightBorder = Math.min(currentPosition + width, 511);
		do Screen.setColor(true);
		do Screen.drawRectangle(currentPosition, GroundHeight-height-1, rightBorder, GroundHeight-1);
		return;
	}

	method void erase()
	{
		var int rightBorder;
		let rightBorder = Math.min(currentPosition + width, 511);
		do Screen.setColor(false);
		do Screen.drawRectangle(currentPosition, GroundHeight-height-1, rightBorder, GroundHeight-1);
		return;
	}

	method void move(int speed)
	{
		do erase();
		let currentPosition = Math.max(currentPosition - speed, 0);
		do draw();
		return;
	}
}
